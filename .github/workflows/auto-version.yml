name: Auto Bump SDK Version

on:
  push:
    branches:
      - main

jobs:
  bump-version:
    name: Bump SDK Version
    runs-on: ubuntu-latest
    if: github.actor != 'github-actions[bot]'
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine next version
        id: version
        run: |
          git fetch --tags --force
          latest=$(git tag --list 'v[0-9]*.[0-9]*.[0-9]*' --sort=-version:refname | head -n 1)
          if [ -z "$latest" ]; then
            current=$(cat sdk/VERSION 2>/dev/null || echo "0.1.0")
          else
            current="${latest#v}"
          fi

          IFS='.' read -r major minor patch <<EOF
$current
EOF

          if [ -z "$major" ] || [ -z "$minor" ] || [ -z "$patch" ]; then
            echo "Failed to parse current version: $current" >&2
            exit 1
          fi

          next_patch=$((patch + 1))
          next_version="$major.$minor.$next_patch"

          echo "Current version: $current"
          echo "Next version: $next_version"

          echo "current=$current" >> "$GITHUB_OUTPUT"
          echo "next=$next_version" >> "$GITHUB_OUTPUT"

      - name: Update version references
        run: |
          python3 scripts/update_sdk_version.py "${{ steps.version.outputs.next }}"

      - name: Commit version bump
        id: commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add sdk/VERSION sdk/cpp/CMakeLists.txt sdk/cpp/USAGE.md
          if git diff --cached --quiet; then
            echo "committed=false" >> "$GITHUB_OUTPUT"
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "chore: bump SDK version to v${{ steps.version.outputs.next }}"
          echo "committed=true" >> "$GITHUB_OUTPUT"

      - name: Tag release
        if: steps.commit.outputs.committed == 'true'
        run: |
          git tag "v${{ steps.version.outputs.next }}"

      - name: Push changes and tag
        if: steps.commit.outputs.committed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD
          git push origin "v${{ steps.version.outputs.next }}"
